
void BottomUpMerge(int A[],int iLeft,int iRight,int iEnd,int B[]);
void CopyArray(int B[],int A[],int n);
void BottomUpMergeSort(int A[],int B[],int n)
{
    for (int width = 1; width < n; width = 2 * width)
    {
        for (int i = 0; i < n; i = i + 2 * width)
        {
            BottomUpMerge(A, i, min(i+width, n), min(i+2*width, n), B);
        }
        CopyArray(B, A, n);
    }
}
void mergeSort(int* a,int n){
  int *b= new int[n];
  BottomUpMergeSort(a,b,n);
}
void BottomUpMerge(int A[],int iLeft,int iRight,int iEnd,int B[])
{
    int i = iLeft, j = iRight;
    for (int k = iLeft; k < iEnd; k++) {
        if (i < iRight && (j >= iEnd || A[i] <= A[j])) {
            B[k] = A[i];
            i = i + 1;
        } else {
            B[k] = A[j];
            j = j + 1;
        }
    }
}

void CopyArray(int B[],int A[],int n)
{
    for(int i = 0; i < n; i++)
        A[i] = B[i];
}
